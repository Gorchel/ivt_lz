I"N(function() {
  var AddColumn, CreateChart, GetParamsA, GetSumm, Numiration;

  $(function() {
    Numiration();
    $('#regular-minus').click(function() {
      if ($('#tableId table').find('tr:first-child').find('td').length > 4) {
        return AddColumn('minus');
      }
    });
    $('#regular-plus').click(function() {
      return AddColumn('plus');
    });
    return $('#start').click(function() {
      var arrayLength, data, i, x, y;
      data = [];
      arrayLength = $('#tableId table').find('tr:first-child').find('td').length - 1;
      i = 1;
      while (i <= arrayLength) {
        x = $('[data-id=1' + i + ']').val() * 1;
        y = $('[data-id=2' + i + ']').val() * 1;
        data.push([x, y]);
        i++;
      }
      return CreateChart(data);
    });
  });

  AddColumn = function(handler) {
    if (handler === "plus") {
      $('#tableId table tr').each(function() {
        $(this).append('<td></td>');
      });
    } else {
      $('#tableId table tr').each(function() {
        $(this).find("td:last-child").remove();
      });
    }
    return Numiration();
  };

  Numiration = function() {
    var i;
    i = 0;
    $('#tableId table').find('tr:first-child').find('td').each(function() {
      if (i > 0) {
        $(this).html(i);
      }
      return i++;
    });
    i = 0;
    $('#tableId table').find('tr:last-child').find('td').each(function() {
      var handler;
      if (i > 0) {
        handler = "2" + i.toString();
        $(this).html('<input data-id =' + handler + ' class="input-table" value=' + handler + ' type="text">');
      }
      return i++;
    });
    i = 0;
    $('#tableId table').find('tr:nth-child(2)').find('td').each(function() {
      var handler;
      if (i > 0) {
        handler = "1" + i.toString();
        $(this).html('<input data-id =' + handler + ' class="input-table" value=' + handler + ' type="text">');
      }
      return i++;
    });
  };

  CreateChart = function(data) {
    var hX, hY, handler, maxX, maxY, minX, minY, options;
    console.log(data);
    minX = data[0][0];
    maxX = data[0][0];
    minY = data[0][1];
    maxY = data[0][1];
    handler = 0;
    while (handler < data.length - 1) {
      if (data[handler + 1][0] < minX) {
        minX = data[handler + 1][0];
      }
      if (data[handler + 1][1] < minY) {
        minY = data[handler + 1][1];
      }
      if (data[handler + 1][0] > maxX) {
        maxX = data[handler + 1][0];
      }
      if (data[handler + 1][1] > maxY) {
        maxY = data[handler + 1][1];
      }
      handler++;
      hX = (maxX - minX) / 20.00;
      hY = (maxY - minY) / 20.00;
    }
    GetParamsA(data);
    options = {
      series: {
        lines: {
          show: false
        },
        points: {
          show: true
        }
      },
      grid: {
        borderColor: '#507296',
        hoverable: true
      },
      yaxis: {
        min: minY - hY,
        max: maxY + hY,
        tickSize: hY
      },
      xaxis: {
        min: minX - hX,
        max: maxX + hX,
        tickSize: hX
      }
    };
    return $.plot($("#placeholder"), [data], options);
  };

  GetParamsA = function(data) {
    var dataX, n;
    n = data.length;
    dataX = [2, 4, 6];
    return console.log(GetSumm(dataX, true));
  };

  GetSumm = function(data, pow) {
    var handler, summ;
    if (pow == null) {
      pow = false;
    }
    handler = 0;
    summ = 0;
    while (handler < data.length) {
      if (pow === true) {
        summ = summ + (data[handler] * data[handler]);
      }
      if (pow === false) {
        summ = summ + data[handler];
      }
      handler++;
    }
    return summ;
  };

}).call(this);
:ET