I"(function() {
  var AddColumn, CreateChart, Numiration;

  $(function() {
    Numiration();
    CreateChart([1, 2, 3, 6, 7, 8, 9, 12, 25, 27], [0, 10, 15, 20, 25, 30]);
    $('#regular-minus').click(function() {
      if ($('#tableId table').find('tr:first-child').find('td').length > 4) {
        return AddColumn('minus');
      }
    });
    $('#regular-plus').click(function() {
      return AddColumn('plus');
    });
    return $('#start').click(function() {
      return console.log($('#tableId table').rows[1].html());
    });
  });

  AddColumn = function(handler) {
    if (handler === "plus") {
      $('#tableId table tr').each(function() {
        $(this).append('<td></td>');
      });
    } else {
      $('#tableId table tr').each(function() {
        $(this).find("td:last-child").remove();
      });
    }
    return Numiration();
  };

  Numiration = function() {
    var i;
    i = 0;
    $('#tableId table').find('tr:first-child').find('td').each(function() {
      if (i > 0) {
        $(this).html(i);
      }
      return i++;
    });
    i = 0;
    $('#tableId table').find('tr:last-child').find('td').each(function() {
      if (i > 0) {
        $(this).html('<input class="input-table" type="text">');
      }
      return i++;
    });
    i = 0;
    $('#tableId table').find('tr:nth-child(2)').find('td').each(function() {
      if (i > 0) {
        $(this).html('<input class="input-table" type="text">');
      }
      return i++;
    });
  };

  CreateChart = function(data, label) {
    var ctx, options;
    data = {
      labels: label,
      datasets: [
        {
          label: 'Chart',
          fillColor: 'rgba(151,187,205,0.2)',
          strokeColor: 'rgba(151,187,205,1)',
          pointColor: 'rgba(151,187,205,1)',
          pointStrokeColor: '#fff',
          pointHighlightFill: '#fff',
          pointHighlightStroke: 'rgba(151,187,205,1)',
          data: data
        }
      ]
    };
    options = {};
    ctx = $("#chart-canvas").get(0).getContext("2d");
    new Chart(ctx).Line(data, options);
  };

}).call(this);
:ET